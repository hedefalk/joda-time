JodaTime ToDo list
==================

For 1.1
-------

The TODO list for 1.1 has not been set yet, however I would hope that
at least some of the items below will be included.

Join joda-interest@lists.sourceforge.net to help out!


Ideas longer term
-----------------
- More chronologies:
   Implement more chronologies, like ChineseChronology, HebrewChronology,
   PersianChronology, etc. This may require more work in localization.

- DateTimeFormatter.appendLocaleFormatterMap(map)
    Adds a map of Locale to Formatter, which picks the formatter to use
    based on the locale of the print/parse. Allows for the flexible insertion
    of any locale based text into a shared multi-language formatter.

- DateTimeField.setNext(instant, value, howManyNext)
    Allows questions like what is the date next Tuesday

- Partial
    A full implementation of partial, where any field may be present,
    and any field may be substituted for. Thus you might define DayOfWeek=Friday
    and DayOfMonth=13, and then resolve to find the next date.

- DateHourMinute/DateHourMinuteSecond
    More instant variations

- DurationProperty on DateTime, Period and related
    Possibly a clear way to do duration stuff, however adding plusDays() type
    methods might be simpler.

- Factories for DateTime classes?
    Perhaps, but the constructors cover this now.

- Chronology:
    Add daysFrom(year)
    This would be a DateTimeField that, given a base year, returns the number of
    elapsed days from 1st Jan that year. Apparantly useful for Excel, where a
    standard format is days from 1900.

- ISOCalendar:
    Calendar subclass that implements our interface. This might be difficult to
    do since Calendar has so many final methods and a rigid specification.

- ISODate:
    Date subclasses that implements our interface. This might not be a worthwhile
    effort since almost all Date methods are deprecated.

- Recurrence:
    Create a set of classes for supporting recurrences. This will need to support
    complex specifications such as "2nd Wednesday in May" and "next Thursday".
    A builder design might be helpful.

- Holidays:
    These might simply be special instances of Recurrences.
